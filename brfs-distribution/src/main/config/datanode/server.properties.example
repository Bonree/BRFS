###############################################
#############Common config#####################
###############################################

# 机器集群名
# cluster.name = brfs

# Zookeeper地址
zookeeper.addresses = localhost:2181

# datanode服务所在的服务组
# datanode.service.group = data_group

# regionnode服务群组名
# regionnode.service.group = region_group

# 插件配置
brfs.plugins.loadList = ["brfs-resource"]


###############################################
###############磁盘分区配置####################
###############################################

# datanode组名
# partition.group = partition_group

# 磁盘分区的检查周期 单位秒
# partition.check.interval.time = 5

###############################################
##############Data Node Config###################
###############################################
# datanode的服务地址,必须配本机ip
datanode.service.host = 192.168.150.103

# datanode的服务端口
# datanode.service.port = 8881

# datanode中文件读取端口
# datanode.file.server.port = 8900

# datanode保存数据文件的目录路径
# datanode.storage.dirs = ["/data1", "/data2"]

# 磁盘文件的最大容量（字节）
#datanode.file.max.capacity = 67108864

# datanode处理数据写入的线程数
# 默认为机器CPU核数
# datanode.writer.worker.num = 16

# datanode写文件线程池的阻塞队列
# datanode.task.queue.num=32

# datanode处理message的线程池的阻塞队列
# 默认为机器CPU核数
# message.handler.queue.limit=16


# 数据文件的写入缓存
# 单位（字节）
# datanode.writer.data.cache = 524288

# 数据写入记录的缓存大小
# datanode.writer.record.cache = 65536

# 文件的空闲时间
# 如果文件空闲时间超过此值，则会把缓存中的内容刷入磁盘
# datanode.file.idle.time = PT3S

# datanode中用于处理Http请求的线程数
# 默认为机器CPU核数
# datanode.request.handler.num = 16

# datanode中进行文件读取的线程数
# 默认为机器CPU核数
# datanode.file.reader.num = 16

###############################################
##############文件平衡模块 Config################
###############################################

# 虚拟服务文件的迁移触发时间（秒）
# -1为立即触发
# rebalance.virtual.recover.time = 3600

# datanode异常的迁移触发时间（秒）
# -1为立即触发
# rebalance.serverdown.recover.time = 3600

###############################################
##############任务管理模块 Config################
###############################################
# 开启任务的队列，默认为"SYSTEM_DELETE","SYSTEM_CHECK","USER_DELETE","SYSTEM_COPY_CHECK","VIRTUAL_ID_RECOVERY"
# 配置空则没有任务执行
# task.switch.set = ["SYSTEM_DELETE","SYSTEM_CHECK","USER_DELETE","SYSTEM_COPY_CHECK","VIRTUAL_ID_RECOVERY"]

# 系统删除任务线程池大小设置，默认值为1
# task.system.delete.pool.size=1

# 用户删除任务线程池大小设置，默认值为1
# task.user.delete.pool.size=1

# 系统CRC校验任务线程池大小设置，默认值为1
# task.system.check.pool.size=1

# 系统副本缺失任务线程池大小设置，默认值为1
# task.system.copy.pool.size=1

# 通用任务创建的周期时间，默认为60s
# 通用任务包含 系统删除任务，系统CRC校验任务，用户删除任务，副本缺失任务
# task.common.create.interval.second=60

# 通用任务周期执行时间，默认为60s
# task.common.execute.interval.second=30

# 每天周期统计副本缺失任务的启动时间，默认为2:30
# task.cycle.check.copy.count.time="2:30"

# 每天周期统计副本缺失任务，扫描的时间范围， 默认为7天
# task.cycle.check.copy.count.time.range=7

# 任务过期时间，默认为 604800s
# task.ttl.second=604800

# 清理脏数据线程执行的时刻，默认为 02:00
# task.file.block.scan.time="02:00"

# 清理脏数据线程执行频率，默认60分钟
# task.file.block.scan.interval.minute=1440

# datanode 启动时清理线程延迟多久执行一次，默认10分钟
# task.file.block.start.delay.minute = 10

# 二级serverid 重新注册线程的频率，默认为1000ms
task.second.register.interval.millisecond = 1000


###############################################
############二期兼容配置################
###############################################
#二期兼容一期读取开关， 默认值为false
compatible.v1.model.switch=false







###############################################
##############资源管理模块 Config################
###############################################
#资源采集

# 资源采集开关 默认开启
datanode.resource.switch=true

# 资源采集的时间间隔 单位 秒 默认10s
datanode.resource.interval.seconds=10

# 资源选择的比值大小
# resource.cent.size=1000

# 资源磁盘剩余限制值，当分区剩余量低于该值，则不会参与写入服务选择， 单位kb
# limit.resource.value.force.disk.remain.size=10485760

# 资源磁盘剩余告警值，当分区剩余大小低于该值，则会发送邮件告警，单位KB
# limit.resource.value.disk.remain.size=20971520



######################
#####报警邮件配置######
######################
# 邮件开关，true发送邮件，false不发送邮件 默认为不开启
# email.switch=false

# 邮箱服务地址
# email.smtp=mail.bonree.com

# 邮箱服务发送端口
# email.smtp.port=25

# 邮箱发送者
# email.send.user=redalert@bonree.com

# 邮箱发送者密码
# email.send.user.password=alert!^*90

# 是否开启ssl发送
# email.use_ssl=false

# 接收者列表，通过，分割
# email.recipient=zhucg@bonree.com

# 邮件内容标题，并非邮件主题
# email.header=BRFS集群
# 邮件默认模块
# email.model=brfs

# 公司信息
# email.company=北京博睿宏远数据科技股份有限公司 版权所有   京 ICP备 08104257 号 京公网安备 1101051190

# 版权信息
# email.copyright=Copyright ©2007-2019 All rights reserved

# 发送email线程池大小
# email.pool.size=3

# deliver的开关，false为关闭，不进行推送
# deliver.switch=false

# kafka的brokers的地址列表
# kafka.brokers=192.168.4.114:9092

# deliver推送的kafka的topic
# kafka.topic=brfs_metric

# deliver缓存大小，超过大小后，将丢弃数据
# deliver.queue.size=200000

# deliver解析字段地址
# deliver.meta.url=http://devtest.ibr.cc:20003/v1

# deliver数据源
# deliver.datasource=sdk_data_brfs

# deliver的写性能表
# deliver.table.writer=brfs_writer_metric

# deliver的读性能表
# deliver.table.reader=brfs_reader_metric

###############################################
##############  gui config   ##################
###############################################


# GUI 资源采集任务开关 默认关闭
# datanode.gui.switch=true

# GUI资源采集任务的时间间隔 单位秒，默认60s
# datanode.gui.interval.seconds=10

# GUI资源文件定时扫描的时间 单位秒，默认60s
# datanode.gui.maintain.interval.seconds=10

# GUI资源文件的过期时间，单位秒，默认为7*24*60*60
# datanode.gui.maintain.interval.seconds=1000

# 用于gui采集数据的服务端口
# datanode.httpserver.port = 18002

