// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataTransfer.proto

package com.bonree.brfs.common.proto;

public final class DataTransferProtos {
  private DataTransferProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FSPacketProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FSPacketProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool crcFlag = 1;</code>
     */
    boolean hasCrcFlag();
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool crcFlag = 1;</code>
     */
    boolean getCrcFlag();

    /**
     * <pre>
     *crc校验码
     * </pre>
     *
     * <code>optional int64 crcCheckCode = 2;</code>
     */
    boolean hasCrcCheckCode();
    /**
     * <pre>
     *crc校验码
     * </pre>
     *
     * <code>optional int64 crcCheckCode = 2;</code>
     */
    long getCrcCheckCode();

    /**
     * <pre>
     *序号，在文件中唯一
     * </pre>
     *
     * <code>optional int64 seqno = 3;</code>
     */
    boolean hasSeqno();
    /**
     * <pre>
     *序号，在文件中唯一
     * </pre>
     *
     * <code>optional int64 seqno = 3;</code>
     */
    long getSeqno();

    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool lastPacketInFile = 4;</code>
     */
    boolean hasLastPacketInFile();
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool lastPacketInFile = 4;</code>
     */
    boolean getLastPacketInFile();

    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    boolean hasFileName();
    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    java.lang.String getFileName();
    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <pre>
     *数据内容
     * </pre>
     *
     * <code>optional bytes data = 6;</code>
     */
    boolean hasData();
    /**
     * <pre>
     *数据内容
     * </pre>
     *
     * <code>optional bytes data = 6;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
     * </pre>
     *
     * <code>optional int32 compress = 7;</code>
     */
    boolean hasCompress();
    /**
     * <pre>
     *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
     * </pre>
     *
     * <code>optional int32 compress = 7;</code>
     */
    int getCompress();

    /**
     * <pre>
     *在文件中的偏移量
     * </pre>
     *
     * <code>optional int64 offsetInFile = 8;</code>
     */
    boolean hasOffsetInFile();
    /**
     * <pre>
     *在文件中的偏移量
     * </pre>
     *
     * <code>optional int64 offsetInFile = 8;</code>
     */
    long getOffsetInFile();

    /**
     * <pre>
     *StorageName
     * </pre>
     *
     * <code>optional int32 storageName = 9;</code>
     */
    boolean hasStorageName();
    /**
     * <pre>
     *StorageName
     * </pre>
     *
     * <code>optional int32 storageName = 9;</code>
     */
    int getStorageName();

    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    boolean hasWriteID();
    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    java.lang.String getWriteID();
    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    com.google.protobuf.ByteString
        getWriteIDBytes();
  }
  /**
   * Protobuf type {@code FSPacketProto}
   */
  public  static final class FSPacketProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FSPacketProto)
      FSPacketProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FSPacketProto.newBuilder() to construct.
    private FSPacketProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FSPacketProto() {
      crcFlag_ = false;
      crcCheckCode_ = 0L;
      seqno_ = 0L;
      lastPacketInFile_ = false;
      fileName_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      compress_ = 0;
      offsetInFile_ = 0L;
      storageName_ = 0;
      writeID_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FSPacketProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              crcFlag_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              crcCheckCode_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seqno_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lastPacketInFile_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              fileName_ = bs;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              data_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              compress_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              offsetInFile_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              storageName_ = input.readInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              writeID_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_FSPacketProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_FSPacketProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.class, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder.class);
    }

    private int bitField0_;
    public static final int CRCFLAG_FIELD_NUMBER = 1;
    private boolean crcFlag_;
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool crcFlag = 1;</code>
     */
    public boolean hasCrcFlag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool crcFlag = 1;</code>
     */
    public boolean getCrcFlag() {
      return crcFlag_;
    }

    public static final int CRCCHECKCODE_FIELD_NUMBER = 2;
    private long crcCheckCode_;
    /**
     * <pre>
     *crc校验码
     * </pre>
     *
     * <code>optional int64 crcCheckCode = 2;</code>
     */
    public boolean hasCrcCheckCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *crc校验码
     * </pre>
     *
     * <code>optional int64 crcCheckCode = 2;</code>
     */
    public long getCrcCheckCode() {
      return crcCheckCode_;
    }

    public static final int SEQNO_FIELD_NUMBER = 3;
    private long seqno_;
    /**
     * <pre>
     *序号，在文件中唯一
     * </pre>
     *
     * <code>optional int64 seqno = 3;</code>
     */
    public boolean hasSeqno() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *序号，在文件中唯一
     * </pre>
     *
     * <code>optional int64 seqno = 3;</code>
     */
    public long getSeqno() {
      return seqno_;
    }

    public static final int LASTPACKETINFILE_FIELD_NUMBER = 4;
    private boolean lastPacketInFile_;
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool lastPacketInFile = 4;</code>
     */
    public boolean hasLastPacketInFile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *是否开启crc校验码
     * </pre>
     *
     * <code>optional bool lastPacketInFile = 4;</code>
     */
    public boolean getLastPacketInFile() {
      return lastPacketInFile_;
    }

    public static final int FILENAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object fileName_;
    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *文件名或uuid
     * </pre>
     *
     * <code>optional string fileName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     *数据内容
     * </pre>
     *
     * <code>optional bytes data = 6;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *数据内容
     * </pre>
     *
     * <code>optional bytes data = 6;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int COMPRESS_FIELD_NUMBER = 7;
    private int compress_;
    /**
     * <pre>
     *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
     * </pre>
     *
     * <code>optional int32 compress = 7;</code>
     */
    public boolean hasCompress() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
     * </pre>
     *
     * <code>optional int32 compress = 7;</code>
     */
    public int getCompress() {
      return compress_;
    }

    public static final int OFFSETINFILE_FIELD_NUMBER = 8;
    private long offsetInFile_;
    /**
     * <pre>
     *在文件中的偏移量
     * </pre>
     *
     * <code>optional int64 offsetInFile = 8;</code>
     */
    public boolean hasOffsetInFile() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *在文件中的偏移量
     * </pre>
     *
     * <code>optional int64 offsetInFile = 8;</code>
     */
    public long getOffsetInFile() {
      return offsetInFile_;
    }

    public static final int STORAGENAME_FIELD_NUMBER = 9;
    private int storageName_;
    /**
     * <pre>
     *StorageName
     * </pre>
     *
     * <code>optional int32 storageName = 9;</code>
     */
    public boolean hasStorageName() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *StorageName
     * </pre>
     *
     * <code>optional int32 storageName = 9;</code>
     */
    public int getStorageName() {
      return storageName_;
    }

    public static final int WRITEID_FIELD_NUMBER = 10;
    private volatile java.lang.Object writeID_;
    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    public boolean hasWriteID() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    public java.lang.String getWriteID() {
      java.lang.Object ref = writeID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writeID_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *写入时的uuid
     * </pre>
     *
     * <code>optional string writeID = 10;</code>
     */
    public com.google.protobuf.ByteString
        getWriteIDBytes() {
      java.lang.Object ref = writeID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writeID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, crcFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, crcCheckCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, seqno_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, lastPacketInFile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, compress_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, offsetInFile_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, storageName_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, writeID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, crcFlag_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, crcCheckCode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, seqno_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, lastPacketInFile_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, compress_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, offsetInFile_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, storageName_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, writeID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto)) {
        return super.equals(obj);
      }
      com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto other = (com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto) obj;

      boolean result = true;
      result = result && (hasCrcFlag() == other.hasCrcFlag());
      if (hasCrcFlag()) {
        result = result && (getCrcFlag()
            == other.getCrcFlag());
      }
      result = result && (hasCrcCheckCode() == other.hasCrcCheckCode());
      if (hasCrcCheckCode()) {
        result = result && (getCrcCheckCode()
            == other.getCrcCheckCode());
      }
      result = result && (hasSeqno() == other.hasSeqno());
      if (hasSeqno()) {
        result = result && (getSeqno()
            == other.getSeqno());
      }
      result = result && (hasLastPacketInFile() == other.hasLastPacketInFile());
      if (hasLastPacketInFile()) {
        result = result && (getLastPacketInFile()
            == other.getLastPacketInFile());
      }
      result = result && (hasFileName() == other.hasFileName());
      if (hasFileName()) {
        result = result && getFileName()
            .equals(other.getFileName());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasCompress() == other.hasCompress());
      if (hasCompress()) {
        result = result && (getCompress()
            == other.getCompress());
      }
      result = result && (hasOffsetInFile() == other.hasOffsetInFile());
      if (hasOffsetInFile()) {
        result = result && (getOffsetInFile()
            == other.getOffsetInFile());
      }
      result = result && (hasStorageName() == other.hasStorageName());
      if (hasStorageName()) {
        result = result && (getStorageName()
            == other.getStorageName());
      }
      result = result && (hasWriteID() == other.hasWriteID());
      if (hasWriteID()) {
        result = result && getWriteID()
            .equals(other.getWriteID());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCrcFlag()) {
        hash = (37 * hash) + CRCFLAG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCrcFlag());
      }
      if (hasCrcCheckCode()) {
        hash = (37 * hash) + CRCCHECKCODE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCrcCheckCode());
      }
      if (hasSeqno()) {
        hash = (37 * hash) + SEQNO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSeqno());
      }
      if (hasLastPacketInFile()) {
        hash = (37 * hash) + LASTPACKETINFILE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLastPacketInFile());
      }
      if (hasFileName()) {
        hash = (37 * hash) + FILENAME_FIELD_NUMBER;
        hash = (53 * hash) + getFileName().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasCompress()) {
        hash = (37 * hash) + COMPRESS_FIELD_NUMBER;
        hash = (53 * hash) + getCompress();
      }
      if (hasOffsetInFile()) {
        hash = (37 * hash) + OFFSETINFILE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOffsetInFile());
      }
      if (hasStorageName()) {
        hash = (37 * hash) + STORAGENAME_FIELD_NUMBER;
        hash = (53 * hash) + getStorageName();
      }
      if (hasWriteID()) {
        hash = (37 * hash) + WRITEID_FIELD_NUMBER;
        hash = (53 * hash) + getWriteID().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FSPacketProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FSPacketProto)
        com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_FSPacketProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_FSPacketProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.class, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder.class);
      }

      // Construct using com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        crcFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        crcCheckCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        seqno_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        lastPacketInFile_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        compress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        offsetInFile_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        storageName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        writeID_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_FSPacketProto_descriptor;
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getDefaultInstanceForType() {
        return com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.getDefaultInstance();
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto build() {
        com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto buildPartial() {
        com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto result = new com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.crcFlag_ = crcFlag_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.crcCheckCode_ = crcCheckCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seqno_ = seqno_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastPacketInFile_ = lastPacketInFile_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.compress_ = compress_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.offsetInFile_ = offsetInFile_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.storageName_ = storageName_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.writeID_ = writeID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto) {
          return mergeFrom((com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto other) {
        if (other == com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.getDefaultInstance()) return this;
        if (other.hasCrcFlag()) {
          setCrcFlag(other.getCrcFlag());
        }
        if (other.hasCrcCheckCode()) {
          setCrcCheckCode(other.getCrcCheckCode());
        }
        if (other.hasSeqno()) {
          setSeqno(other.getSeqno());
        }
        if (other.hasLastPacketInFile()) {
          setLastPacketInFile(other.getLastPacketInFile());
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000010;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasCompress()) {
          setCompress(other.getCompress());
        }
        if (other.hasOffsetInFile()) {
          setOffsetInFile(other.getOffsetInFile());
        }
        if (other.hasStorageName()) {
          setStorageName(other.getStorageName());
        }
        if (other.hasWriteID()) {
          bitField0_ |= 0x00000200;
          writeID_ = other.writeID_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean crcFlag_ ;
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool crcFlag = 1;</code>
       */
      public boolean hasCrcFlag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool crcFlag = 1;</code>
       */
      public boolean getCrcFlag() {
        return crcFlag_;
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool crcFlag = 1;</code>
       */
      public Builder setCrcFlag(boolean value) {
        bitField0_ |= 0x00000001;
        crcFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool crcFlag = 1;</code>
       */
      public Builder clearCrcFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        crcFlag_ = false;
        onChanged();
        return this;
      }

      private long crcCheckCode_ ;
      /**
       * <pre>
       *crc校验码
       * </pre>
       *
       * <code>optional int64 crcCheckCode = 2;</code>
       */
      public boolean hasCrcCheckCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *crc校验码
       * </pre>
       *
       * <code>optional int64 crcCheckCode = 2;</code>
       */
      public long getCrcCheckCode() {
        return crcCheckCode_;
      }
      /**
       * <pre>
       *crc校验码
       * </pre>
       *
       * <code>optional int64 crcCheckCode = 2;</code>
       */
      public Builder setCrcCheckCode(long value) {
        bitField0_ |= 0x00000002;
        crcCheckCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *crc校验码
       * </pre>
       *
       * <code>optional int64 crcCheckCode = 2;</code>
       */
      public Builder clearCrcCheckCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        crcCheckCode_ = 0L;
        onChanged();
        return this;
      }

      private long seqno_ ;
      /**
       * <pre>
       *序号，在文件中唯一
       * </pre>
       *
       * <code>optional int64 seqno = 3;</code>
       */
      public boolean hasSeqno() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *序号，在文件中唯一
       * </pre>
       *
       * <code>optional int64 seqno = 3;</code>
       */
      public long getSeqno() {
        return seqno_;
      }
      /**
       * <pre>
       *序号，在文件中唯一
       * </pre>
       *
       * <code>optional int64 seqno = 3;</code>
       */
      public Builder setSeqno(long value) {
        bitField0_ |= 0x00000004;
        seqno_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *序号，在文件中唯一
       * </pre>
       *
       * <code>optional int64 seqno = 3;</code>
       */
      public Builder clearSeqno() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seqno_ = 0L;
        onChanged();
        return this;
      }

      private boolean lastPacketInFile_ ;
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool lastPacketInFile = 4;</code>
       */
      public boolean hasLastPacketInFile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool lastPacketInFile = 4;</code>
       */
      public boolean getLastPacketInFile() {
        return lastPacketInFile_;
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool lastPacketInFile = 4;</code>
       */
      public Builder setLastPacketInFile(boolean value) {
        bitField0_ |= 0x00000008;
        lastPacketInFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否开启crc校验码
       * </pre>
       *
       * <code>optional bool lastPacketInFile = 4;</code>
       */
      public Builder clearLastPacketInFile() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lastPacketInFile_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *文件名或uuid
       * </pre>
       *
       * <code>optional string fileName = 5;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        fileName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *数据内容
       * </pre>
       *
       * <code>optional bytes data = 6;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *数据内容
       * </pre>
       *
       * <code>optional bytes data = 6;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       *数据内容
       * </pre>
       *
       * <code>optional bytes data = 6;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据内容
       * </pre>
       *
       * <code>optional bytes data = 6;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int compress_ ;
      /**
       * <pre>
       *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
       * </pre>
       *
       * <code>optional int32 compress = 7;</code>
       */
      public boolean hasCompress() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
       * </pre>
       *
       * <code>optional int32 compress = 7;</code>
       */
      public int getCompress() {
        return compress_;
      }
      /**
       * <pre>
       *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
       * </pre>
       *
       * <code>optional int32 compress = 7;</code>
       */
      public Builder setCompress(int value) {
        bitField0_ |= 0x00000040;
        compress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否压缩,0:不压缩,1:gzip,2:snappy,3保留
       * </pre>
       *
       * <code>optional int32 compress = 7;</code>
       */
      public Builder clearCompress() {
        bitField0_ = (bitField0_ & ~0x00000040);
        compress_ = 0;
        onChanged();
        return this;
      }

      private long offsetInFile_ ;
      /**
       * <pre>
       *在文件中的偏移量
       * </pre>
       *
       * <code>optional int64 offsetInFile = 8;</code>
       */
      public boolean hasOffsetInFile() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *在文件中的偏移量
       * </pre>
       *
       * <code>optional int64 offsetInFile = 8;</code>
       */
      public long getOffsetInFile() {
        return offsetInFile_;
      }
      /**
       * <pre>
       *在文件中的偏移量
       * </pre>
       *
       * <code>optional int64 offsetInFile = 8;</code>
       */
      public Builder setOffsetInFile(long value) {
        bitField0_ |= 0x00000080;
        offsetInFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *在文件中的偏移量
       * </pre>
       *
       * <code>optional int64 offsetInFile = 8;</code>
       */
      public Builder clearOffsetInFile() {
        bitField0_ = (bitField0_ & ~0x00000080);
        offsetInFile_ = 0L;
        onChanged();
        return this;
      }

      private int storageName_ ;
      /**
       * <pre>
       *StorageName
       * </pre>
       *
       * <code>optional int32 storageName = 9;</code>
       */
      public boolean hasStorageName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *StorageName
       * </pre>
       *
       * <code>optional int32 storageName = 9;</code>
       */
      public int getStorageName() {
        return storageName_;
      }
      /**
       * <pre>
       *StorageName
       * </pre>
       *
       * <code>optional int32 storageName = 9;</code>
       */
      public Builder setStorageName(int value) {
        bitField0_ |= 0x00000100;
        storageName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *StorageName
       * </pre>
       *
       * <code>optional int32 storageName = 9;</code>
       */
      public Builder clearStorageName() {
        bitField0_ = (bitField0_ & ~0x00000100);
        storageName_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object writeID_ = "";
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public boolean hasWriteID() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public java.lang.String getWriteID() {
        java.lang.Object ref = writeID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writeID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public com.google.protobuf.ByteString
          getWriteIDBytes() {
        java.lang.Object ref = writeID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writeID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public Builder setWriteID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        writeID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public Builder clearWriteID() {
        bitField0_ = (bitField0_ & ~0x00000200);
        writeID_ = getDefaultInstance().getWriteID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *写入时的uuid
       * </pre>
       *
       * <code>optional string writeID = 10;</code>
       */
      public Builder setWriteIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        writeID_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FSPacketProto)
    }

    // @@protoc_insertion_point(class_scope:FSPacketProto)
    private static final com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto();
    }

    public static com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FSPacketProto>
        PARSER = new com.google.protobuf.AbstractParser<FSPacketProto>() {
      public FSPacketProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FSPacketProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FSPacketProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FSPacketProto> getParserForType() {
      return PARSER;
    }

    public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BatchFSPacketsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BatchFSPackets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> 
        getBatchPacketsList();
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getBatchPackets(int index);
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    int getBatchPacketsCount();
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    java.util.List<? extends com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder> 
        getBatchPacketsOrBuilderList();
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder getBatchPacketsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BatchFSPackets}
   */
  public  static final class BatchFSPackets extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BatchFSPackets)
      BatchFSPacketsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BatchFSPackets.newBuilder() to construct.
    private BatchFSPackets(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatchFSPackets() {
      batchPackets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BatchFSPackets(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                batchPackets_ = new java.util.ArrayList<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              batchPackets_.add(
                  input.readMessage(com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          batchPackets_ = java.util.Collections.unmodifiableList(batchPackets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_BatchFSPackets_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_BatchFSPackets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.class, com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.Builder.class);
    }

    public static final int BATCHPACKETS_FIELD_NUMBER = 1;
    private java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> batchPackets_;
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    public java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> getBatchPacketsList() {
      return batchPackets_;
    }
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    public java.util.List<? extends com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder> 
        getBatchPacketsOrBuilderList() {
      return batchPackets_;
    }
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    public int getBatchPacketsCount() {
      return batchPackets_.size();
    }
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getBatchPackets(int index) {
      return batchPackets_.get(index);
    }
    /**
     * <code>repeated .FSPacketProto batchPackets = 1;</code>
     */
    public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder getBatchPacketsOrBuilder(
        int index) {
      return batchPackets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < batchPackets_.size(); i++) {
        output.writeMessage(1, batchPackets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < batchPackets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, batchPackets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets)) {
        return super.equals(obj);
      }
      com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets other = (com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets) obj;

      boolean result = true;
      result = result && getBatchPacketsList()
          .equals(other.getBatchPacketsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBatchPacketsCount() > 0) {
        hash = (37 * hash) + BATCHPACKETS_FIELD_NUMBER;
        hash = (53 * hash) + getBatchPacketsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BatchFSPackets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BatchFSPackets)
        com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPacketsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_BatchFSPackets_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_BatchFSPackets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.class, com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.Builder.class);
      }

      // Construct using com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBatchPacketsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (batchPacketsBuilder_ == null) {
          batchPackets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          batchPacketsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bonree.brfs.common.proto.DataTransferProtos.internal_static_BatchFSPackets_descriptor;
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets getDefaultInstanceForType() {
        return com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.getDefaultInstance();
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets build() {
        com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets buildPartial() {
        com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets result = new com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets(this);
        int from_bitField0_ = bitField0_;
        if (batchPacketsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            batchPackets_ = java.util.Collections.unmodifiableList(batchPackets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.batchPackets_ = batchPackets_;
        } else {
          result.batchPackets_ = batchPacketsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets) {
          return mergeFrom((com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets other) {
        if (other == com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets.getDefaultInstance()) return this;
        if (batchPacketsBuilder_ == null) {
          if (!other.batchPackets_.isEmpty()) {
            if (batchPackets_.isEmpty()) {
              batchPackets_ = other.batchPackets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBatchPacketsIsMutable();
              batchPackets_.addAll(other.batchPackets_);
            }
            onChanged();
          }
        } else {
          if (!other.batchPackets_.isEmpty()) {
            if (batchPacketsBuilder_.isEmpty()) {
              batchPacketsBuilder_.dispose();
              batchPacketsBuilder_ = null;
              batchPackets_ = other.batchPackets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              batchPacketsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatchPacketsFieldBuilder() : null;
            } else {
              batchPacketsBuilder_.addAllMessages(other.batchPackets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> batchPackets_ =
        java.util.Collections.emptyList();
      private void ensureBatchPacketsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          batchPackets_ = new java.util.ArrayList<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto>(batchPackets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder> batchPacketsBuilder_;

      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> getBatchPacketsList() {
        if (batchPacketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(batchPackets_);
        } else {
          return batchPacketsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public int getBatchPacketsCount() {
        if (batchPacketsBuilder_ == null) {
          return batchPackets_.size();
        } else {
          return batchPacketsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto getBatchPackets(int index) {
        if (batchPacketsBuilder_ == null) {
          return batchPackets_.get(index);
        } else {
          return batchPacketsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder setBatchPackets(
          int index, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto value) {
        if (batchPacketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchPacketsIsMutable();
          batchPackets_.set(index, value);
          onChanged();
        } else {
          batchPacketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder setBatchPackets(
          int index, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder builderForValue) {
        if (batchPacketsBuilder_ == null) {
          ensureBatchPacketsIsMutable();
          batchPackets_.set(index, builderForValue.build());
          onChanged();
        } else {
          batchPacketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder addBatchPackets(com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto value) {
        if (batchPacketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchPacketsIsMutable();
          batchPackets_.add(value);
          onChanged();
        } else {
          batchPacketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder addBatchPackets(
          int index, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto value) {
        if (batchPacketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchPacketsIsMutable();
          batchPackets_.add(index, value);
          onChanged();
        } else {
          batchPacketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder addBatchPackets(
          com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder builderForValue) {
        if (batchPacketsBuilder_ == null) {
          ensureBatchPacketsIsMutable();
          batchPackets_.add(builderForValue.build());
          onChanged();
        } else {
          batchPacketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder addBatchPackets(
          int index, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder builderForValue) {
        if (batchPacketsBuilder_ == null) {
          ensureBatchPacketsIsMutable();
          batchPackets_.add(index, builderForValue.build());
          onChanged();
        } else {
          batchPacketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder addAllBatchPackets(
          java.lang.Iterable<? extends com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto> values) {
        if (batchPacketsBuilder_ == null) {
          ensureBatchPacketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, batchPackets_);
          onChanged();
        } else {
          batchPacketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder clearBatchPackets() {
        if (batchPacketsBuilder_ == null) {
          batchPackets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          batchPacketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public Builder removeBatchPackets(int index) {
        if (batchPacketsBuilder_ == null) {
          ensureBatchPacketsIsMutable();
          batchPackets_.remove(index);
          onChanged();
        } else {
          batchPacketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder getBatchPacketsBuilder(
          int index) {
        return getBatchPacketsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder getBatchPacketsOrBuilder(
          int index) {
        if (batchPacketsBuilder_ == null) {
          return batchPackets_.get(index);  } else {
          return batchPacketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public java.util.List<? extends com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder> 
           getBatchPacketsOrBuilderList() {
        if (batchPacketsBuilder_ != null) {
          return batchPacketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(batchPackets_);
        }
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder addBatchPacketsBuilder() {
        return getBatchPacketsFieldBuilder().addBuilder(
            com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.getDefaultInstance());
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder addBatchPacketsBuilder(
          int index) {
        return getBatchPacketsFieldBuilder().addBuilder(
            index, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.getDefaultInstance());
      }
      /**
       * <code>repeated .FSPacketProto batchPackets = 1;</code>
       */
      public java.util.List<com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder> 
           getBatchPacketsBuilderList() {
        return getBatchPacketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder> 
          getBatchPacketsFieldBuilder() {
        if (batchPacketsBuilder_ == null) {
          batchPacketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProto.Builder, com.bonree.brfs.common.proto.DataTransferProtos.FSPacketProtoOrBuilder>(
                  batchPackets_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          batchPackets_ = null;
        }
        return batchPacketsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BatchFSPackets)
    }

    // @@protoc_insertion_point(class_scope:BatchFSPackets)
    private static final com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets();
    }

    public static com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BatchFSPackets>
        PARSER = new com.google.protobuf.AbstractParser<BatchFSPackets>() {
      public BatchFSPackets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatchFSPackets(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatchFSPackets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatchFSPackets> getParserForType() {
      return PARSER;
    }

    public com.bonree.brfs.common.proto.DataTransferProtos.BatchFSPackets getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FSPacketProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FSPacketProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BatchFSPackets_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BatchFSPackets_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022DataTransfer.proto\"\315\001\n\rFSPacketProto\022\017" +
      "\n\007crcFlag\030\001 \001(\010\022\024\n\014crcCheckCode\030\002 \001(\003\022\r\n" +
      "\005seqno\030\003 \001(\003\022\030\n\020lastPacketInFile\030\004 \001(\010\022\020" +
      "\n\010fileName\030\005 \001(\t\022\014\n\004data\030\006 \001(\014\022\020\n\010compre" +
      "ss\030\007 \001(\005\022\024\n\014offsetInFile\030\010 \001(\003\022\023\n\013storag" +
      "eName\030\t \001(\005\022\017\n\007writeID\030\n \001(\t\"6\n\016BatchFSP" +
      "ackets\022$\n\014batchPackets\030\001 \003(\0132\016.FSPacketP" +
      "rotoB2\n\034com.bonree.brfs.common.protoB\022Da" +
      "taTransferProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_FSPacketProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_FSPacketProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FSPacketProto_descriptor,
        new java.lang.String[] { "CrcFlag", "CrcCheckCode", "Seqno", "LastPacketInFile", "FileName", "Data", "Compress", "OffsetInFile", "StorageName", "WriteID", });
    internal_static_BatchFSPackets_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_BatchFSPackets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BatchFSPackets_descriptor,
        new java.lang.String[] { "BatchPackets", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
